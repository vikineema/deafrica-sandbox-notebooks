# The name of your workflow. 
# GitHub displays the names of your workflows on your repository's actions page. 
##name: Publish deafrica-tools to PyPI
name: Publish deafrica-tools to Test PyPI
# Define which events can cause the workflow to run. 
on:
  # Triggers the workflow to run  when 
  # 1) a push is made to the main branch that includes changes to any file in the `Tools/` directory,
  # 2) when a release has been published' or 
  # 3) by clicking the 'Run workflow' button on the Actions tab.
  push:
    branches:
      #- main
      - test-publishing-using-poetry
    paths:
      - '.github/workflows/publish.yml'
      - 'Tools/**'
  release:
    types: [published]
  workflow_dispatch:

# Groups together all the jobs that run in the workflow. 
# A workflow run is made up of one or more jobs. 
# Jobs run in parallel by default.
jobs:
  # Job unique identifier.
  build-n-publish:
    # Name for the job, which is displayed on GitHub.
    #name: Build and publish deafrica-tools to PyPI
    name: Build and publish deafrica-tools to Test PyPI
    # Specifies the runner environment the job will run in. 
    # Configure the job to run on the latest version of an Ubuntu Linux runner.
    runs-on: ubuntu-latest
    # Set default working directory for all run steps in the job
    defaults:
      run:
        working-directory: ./Tools
    # Groups together all the steps that run in the job. 
    # A job contains a sequence of tasks called steps. 
    # Each item nested under this section is a separate action or shell script. 
    steps:
      # The uses keyword specifies that this step will run v3 of the actions/checkout action. 
      # This is an action that checks out your repository onto the runner (downloads your repository into the CI runner), 
      # allowing you to run scripts or other actions against your code (such as build and test tools). 
      # You should use the checkout action any time your workflow will run against the repository's code.
      - name: Checkout the digitalearthafrica/deafrica-sandbox-notebooks repository
        uses: actions/checkout@v3
      # This action sets up a Python environment for use in the workflow by installing and activating Python 3.10.
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10" # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified.
      - name: Build and publish distribution ðŸ“¦ to Test PyPI
        uses: JRubics/poetry-publish@v1.17
        with:
          # The version of python to install 
          python_version: "3.10.6"
          # The version of poetry to install 
          poetry_version: "==1.5.0" # (PIP version specifier syntax)
          # API token to authenticate when uploading package to PyPI
          pypi_token: ${{ secrets.TEST_PYPI_API_TOKEN }}
          # Name of repository where the package will be uploaded
          repository_name: "testpypi"
          # The URL where the package will be uploaded
          repository_url: "https://test.pypi.org/legacy/"
          #  subdirectory path if poetry package doesn't reside in the main workflow directory
          package_directory: "Tools"
    