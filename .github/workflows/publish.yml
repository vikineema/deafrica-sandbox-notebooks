# The name of your workflow. 
# GitHub displays the names of your workflows on your repository's actions page. 
##name: Publish deafrica-tools to PyPI
name: Publish deafrica-tools to Test PyPI
# Specifies the triggers for this workflow. 
on:
  # Triggers the workflow to run  when 
  # 1) a push occurs on the main branch that includes changes to any file in the Tools/ directory,
  # 2) when a release has been published or 
  # 3) by clicking the 'Run workflow' button on the Actions tab.
  push:
    branches:
      #- main
      - test-publishing-using-poetry
    paths:
      - 'Tools/**'
  release:
    types: [published]
  workflow_dispatch:

# Groups together all the jobs that run in the workflow. 
# A workflow run is made up of one or more jobs. 
# Jobs run in parallel by default.
jobs:
  # Job unique identifier.
  build-n-publish:
    # Name for the job, which is displayed on GitHub.
    #name: Build and publish deafrica-tools to PyPI
    name: Build and publish deafrica-tools to Test PyPI
    # Specifies the runner environment the job will run in. 
    # Configure the job to run on the latest version of an Ubuntu Linux runner.
    runs-on: ubuntu-latest
    # Groups together all the steps that run in the job. 
    # A job contains a sequence of tasks called steps. 
    # Each item nested under this section is a separate action or shell script. 
    steps:
      # The uses keyword specifies that this step will run v3 of the actions/checkout action. 
      # This is an action that checks out your repository onto the runner (downloads your repository into the CI runner), 
      # allowing you to run scripts or other actions against your code (such as build and test tools). 
      # You should use the checkout action any time your workflow will run against the repository's code.
      - name: Checkout the digitalearthafrica/deafrica-sandbox-notebooks repository
        uses: actions/checkout@v3
      # This action sets up a Python environment for use in the workflow by installing and activating Python 3.10.
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10" # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified.
      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -
      - name: Add Poetry to path
        run: echo "${HOME}/.poetry/bin" >> $GITHUB_PATH
      - name: Install venv
        run: poetry install
      - name: Configure the repository to publish to
        run: poetry config repositories.testpypi https://test.pypi.org/legacy/
      - name: Configure the credentials for the repository
        run: poetry config pypi-token.testpypi ${{ secrets.TEST_PYPI_API_TOKEN }}
      - name: Build the source (sdist) and wheel archives
        run: poetry build
      - name: Publish package previously built to the remote repository
        run: poetry publish --repository testpypi
   